# Coolify Deployment Configuration
# Place This File As coolify.yml In Your Repository Root

version: "3.8"

services:
  telegram-id-bot:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: telegram-id-bot
    ports:
      - "3000:3000"
    environment:
      # Required Environment Variables
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      
      # Application Configuration
      - PORT=3000
      - APP_ENV=production
      - LOG_LEVEL=INFO
      
      # Bot Configuration
      - BOT_SIGNATURE=${BOT_SIGNATURE:-"Coolify Deployed Bot"}
      - MAX_RETRIES=3
      - REQUEST_TIMEOUT=30
      
      # Performance Tuning
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      
    # Health Check Configuration
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/healthz"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 60s
      
    # Restart Policy
    restart: unless-stopped
    
    # Resource Limits (Optional - Adjust Based On Your Needs)
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.2'
    
    # Volume Mounts For Persistent Logs
    volumes:
      - ./logs:/app/logs:rw
      
    # Network Configuration
    networks:
      - coolify
      
    # Security Context
    user: "1000:1000" 
    read_only: false   

    labels:
      - "coolify.managed=true"
      - "coolify.version=1.0"
      - "coolify.type=application"
      - "traefik.enable=true"
      - "traefik.http.routers.telegram-bot.rule=Host(`your-domain.com`)"
      - "traefik.http.services.telegram-bot.loadbalancer.server.port=3000"

networks:
  coolify:
    external: true

volumes:
  bot-logs:
    driver: local
